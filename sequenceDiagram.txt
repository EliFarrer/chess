actor Client
participant Server
participant Handler
participant Service
participant DataAccess
database db

entryspacing 0.9
group #navy Registration #white
Client -> Server: [POST] /user\n{"username":" ", "password":" ", "email":" "}
Server -> Handler: {"username":" ", "password":" ", "email":" "}
Handler -> Service: register(RegisterRequest)
Service -> DataAccess: getUser(username)
DataAccess -> db:Find UserData by username
DataAccess --> Service: null
Service -> DataAccess:createUser(userData)
DataAccess -> db:Add UserData
Service -> DataAccess:createAuth(authData)
DataAccess -> db:Add AuthData
Service --> Handler: RegisterResult
Handler --> Server: {"username" : " ", "authToken" : " "}
Server --> Client: 200\n{"username" : " ", "authToken" : " "}
end

group #orange Login #white
Client -> Server: [POST] /session\n{username, password}
Server -> Handler: {username, password}
Handler -> Service: login(LoginRequest)
Service -> DataAccess:getAuth(authData)
DataAccess -> db: Add AuthData
Service --> Handler: LoginResult
Handler --> Server: {username, authToken}
Server --> Client: 200\n{username, authToken}
end

group #green Logout #white
Client -> Server: [DELETE] /session\nauthToken
Server -> Handler: authToken
Handler -> Service: logout(LogoutRequest)
Service -> DataAccess: deleteAuth(authData)
DataAccess -> db: Remove AuthData
Service --> Handler: void
Handler --> Server: void
Server --> Client: 200\n{}
end

group #red List Games #white
Client -> Server: [GET] /game\nauthToken
Server -> Handler: authToken
Handler -> Service: listGames(authToken)
Service -> DataAccess:listGames(authData)
DataAccess -> db: Read Games
DataAccess --> Service: {games: [{gameID, whiteUsername, blackUsername}]}
Service --> Handler: {games: [{gameID, whiteUsername, blackUsername}]}
Handler --> Server: {games: [{gameID, whiteUsername, blackUsername}]}
Server --> Client: 200\n{games: [{gameID, whiteUsername, blackUsername}]}
end

group #purple Create Game #white
Client -> Server: [POST] /game\nauthToken\n{gameName}
Server -> Handler: authToken\n{gameName}
Handler -> Service: createGame(authToken, {gameName})
Service -> DataAccess: createGame(authData, gameName)
DataAccess -> db: Add a Game
Service --> Handler: {gameID}
Handler --> Server: {gameID}
Server --> Client: 200\n{gameID}
end

group #yellow Join Game #black
Client -> Server: [PUT] /game\nauthToken\n{playerColor, gameID}
Server -> Handler: authToken\n{playerColor, gameID}
Handler -> Service: joinGame(authToken, {playerColor, gameID})
Service -> DataAccess: getAuth(authToken)
DataAccess -> db: retrieve authorization
Service -> DataAccess: updateGame(playerColor, gameID)
DataAccess -> db: update the game
Service --> Handler: {}
Handler --> Server: {}
Server --> Client: 200\n{}
end

group #gray Clear application #white
Client -> Server: [DELETE] /db
Server -> Handler: {}
Handler -> Service: clear()
Service -> DataAccess: clear()
DataAccess -> db: clear all data
DataAccess --> Service: {}
Service --> Handler: {}
Handler --> Server: {}
Server --> Client: 200\n{}
end
